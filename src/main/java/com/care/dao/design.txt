Member table
1       ID              INT(10)                 AUTO INCREMENT
2       First_Name      VARCHAR(100)             NOT NULL
3       Last_Name       VARCHAR(100)             NOT NULL
4       Phone           BIGINT(10)
6       Member_Type     ENUM {Seeker, Sitter, Admin}
5       Email(ID)       VARCHAR(100)
7       Address         VARCHAR(250)

9       Zip_code        INT(6)                  NOT NULL
10      Status          ENUM {Active, Inactive} DEFAULT ACTIVE
11      LAST_MODIFIED   TIMESTAMP              ON UPDATE
12      Password        VARCHAR(30)             NOT NULL
PrimaryKey (Email)

Add cascade related info.
If the member's status changes to inactive then all jobs posted by him and all jobs applied by him
must also be marked inactive.use triggers.

CREATE TABLE SEEKER(
       ID              INT(10)  ,
       NO_CHILDREN     INT(3)   ,
       SPOUSE_NAME     VARCHAR(50),
       FOREIGN KEY (ID) REFERENCES MEMBER(ID)
);

CREATE TABLE SITTER (
       ID               INT(10)         PRIMARY KEY,
       EXPERIENCE       INT(2)          NOT NULL,
       EXPECTED_PAY     DECIMAL(5, 2)   NOT NULL,
       FOREIGN KEY (ID) REFERENCES MEMBER(ID)
);

CREATE TABLE JOB (
       ID              INT(10)           AUTO_INCREMENT PRIMARY KEY,
       TITLE           VARCHAR(100)         NOT NULL,
       POSTED_BY       BIGINT(10)           NOT NULL,
       HOURLY_PAY      DECIMAL(5,3)         NOT NULL,
       START_DATE      TIMESTAMP            NOT NULL DEFAULT CURRENT_TIMESTAMP,
       END_DATE        TIMESTAMP            NOT NULL DEFAULT CURRENT_TIMESTAMP,
       DATE_CREATED    TIMESTAMP            NOT NULL DEFAULT CURRENT_TIMESTAMP ,
       STATUS          ENUM ("ACTIVE", "CLOSED", "EXPIRED") DEFAULT "ACTIVE" NOT NULL,
       LAST_MODIFIED   TIMESTAMP            DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
       FOREIGN KEY (POSTED_BY) REFERENCES SEEKER(ID)
);

CREATE TABLE APPLICATION(
       ID              INT(10)        AUTO_INCREMENT PRIMARY KEY,
       JOB_ID          INT(10)        NOT NULL,
       SITTER_ID       INT(10)              NOT NULL,
       EXPECTED_PAY    DECIMAL(8,3)    NOT NULL,
       STATUS           ENUM ("ACTIVE", "EXPIRED", "CLOSED") DEFAULT "ACTIVE" NOT NULL ,
       DATE_CREATED    TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
       LAST_MODIFIED   TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
       FOREIGN KEY (JOB_ID) REFERENCES JOB(ID) ,
       FOREIGN KEY (SITTER_ID) REFERENCES SITTER(ID)
);

create table MEMBER (
        ID              INT(10)                 NOT NULL AUTO_INCREMENT PRIMARY KEY,
        FIRST_NAME      VARCHAR(100)             NOT NULL,
        LAST_NAME       VARCHAR(100)             NOT NULL,
        PHONE           BIGINT(10)                 NOT NULL,
        MEMBER_TYPE     ENUM ("SEEKER", "SITTER", "ADMIN") DEFAULT "SEEKER" ,
        EMAIL           VARCHAR(100)            UNIQUE NOT NULL,
        ADDRESS         VARCHAR(250)  ,
        ZIP_CODE        INT(6)                  NOT NULL,
        STATUS          ENUM ("ACTIVE", "CLOSED", "SUSPENDED") DEFAULT "ACTIVE",
        LAST_MODIFIED   TIMESTAMP  DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        PASSWORD        VARCHAR(64)             NOT NULL
  );

CREATE TABLE TOKEN (
    ID              INT(10)              PRIMARY KEY AUTO_INCREMENT,
    MEMBER_ID       INT(10)              NOT NULL,
    TOKEN           VARCHAR(32)             NOT NULL,
    EXPIRATION_DATE TIMESTAMP               NOT NULL,
    STATUS          ENUM('ACTIVE', 'CLOSED') DEFAULT 'ACTIVE',
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(ID)
  );

  ALTER TABLE MEMBER MODIFY COLUMN LAST_MODIFIED DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;
  ALTER TABLE JOB MODIFY COLUMN LAST_MODIFIED DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;
  ALTER TABLE APPLICATION MODIFY COLUMN LAST_MODIFIED DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;

  ALTER TABLE JOB MODIFY COLUMN DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP;
  ALTER TABLE APPLICATION MODIFY COLUMN DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP;

  ALTER TABLE MEMBER MODIFY COLUMN EMAIL VARCHAR(150) UNIQUE NOT NULL;

insert into MEMBER(first_name, last_name, address, phone, email, zip_code, password)
values("suraj", "kumar", "A k colony, Domlur", 1234, "a@a", 234314, "qwerty"),
("sai", "Krishna", "Mens PG domlur", 1233, "sai@gmail", 141343, "asdf");

INSERT INTO MEMBER(first_name, last_name, address, phone, email, zip_code, password, MEMBER_TYPE)
VALUES("abhay", "yadav", "1st block Koramangla", 12344, "abhay@gmail", 123456, "Abhay", "sitter"),
("anushri", "hv", "Domlur pg", 12345, "anu@gmail", 235346, "Anu", "sitter");

INSERT INTO SEEKER(ID)
VALUES(1),(2);

INSERT INTO SITTER(ID, EXPERIENCE, EXPECTED_PAY)
VALUES(3, 12, 123),(4,1, 133);

INSERT INTO JOB(TITLE, POSTED_BY, HOURLY_PAY, START_DATE, END_DATE )
VALUES("mY First Job", 1, 12, '2018-08-12', '2018-08-12'),
("Not a job", 2, 11, '2018-08-12', '2018-08-12'),
("BabySitting service", 2, 23, '2018-08-12', '2018-08-12' ),
("Elderly service", 2, 111, '2018-08-12', '2018-08-12' );


insert into APPLICATION(JOB_ID, MEMBER_ID, EXPECTED_PAY)
VALUES(3,3,12), (4,3,32), (3,4,21), (4,4,12);

//LIST ALL APPLICATIONS ON A JOB GIVEN A JOB_ID
SELECT JOB.TITLE, MEMBER.FIRST_NAME, MEMBER.LAST_NAME, APPLICATION.STATUS, APPLICATION.EXPECTED_PAY, JOB_ID FROM
APPLICATION
INNER JOIN MEMBER ON APPLICATION.MEMBER_ID = MEMBER.ID
INNER JOIN  JOB ON APPLICATION.JOB_ID = JOB.ID
WHERE APPLICATION.JOB_ID = 4 AND APPLICATION.STATUS = 'ACTIVE';

SELECT * FROM
APPLICATION
INNER JOIN JOB ON JOB.ID = APPLICATION.JOB_ID
WHERE MEMBER_ID = 4;

SELECT TITLE, HOURLY_PAY, START_DATE, END_DATE FROM JOB
WHERE JOB.ID NOT IN (SELECT APPLICATION.JOB_ID FROM APPLICATION WHERE MEMBER_ID = 4);

